{"ast":null,"code":"import _slicedToArray from \"/Users/richardlawson/Desktop/Projects/623 Studios/Chat-Quiz/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"/Users/richardlawson/Desktop/Projects/623 Studios/Chat-Quiz/src/SensitiveTopicGame.js\",\n  _this = this,\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport questions from \"./questions.json\";\nimport GameOver from \"./GameOver\";\nimport GameInProgress from \"./GameInProgress\";\nimport \"./styles.css\"; // Import the stylesheet\n\n// Define a constant for the time limit for the quiz game\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar TIME_LIMIT = 30;\nvar SensitiveTopicGame = function SensitiveTopicGame() {\n  _s();\n  // Use the useState hook to define and update state variables\n  var _useState = useState(questions[0]),\n    _useState2 = _slicedToArray(_useState, 2),\n    currentQuestion = _useState2[0],\n    setCurrentQuestion = _useState2[1];\n  var _useState3 = useState(0),\n    _useState4 = _slicedToArray(_useState3, 2),\n    score = _useState4[0],\n    setScore = _useState4[1];\n  var _useState5 = useState(TIME_LIMIT),\n    _useState6 = _slicedToArray(_useState5, 2),\n    timer = _useState6[0],\n    setTimer = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    gameOver = _useState8[0],\n    setGameOver = _useState8[1];\n\n  // Use the useCallback hook to create a memoized version of the handleNextQuestion function\n  var handleNextQuestion = useCallback(function () {\n    var nextQuestionIndex = questions.indexOf(currentQuestion) + 1;\n    if (nextQuestionIndex < questions.length) {\n      setTimer(TIME_LIMIT); // Reset the timer to the time limit\n      setCurrentQuestion(questions[nextQuestionIndex]);\n    } else {\n      setGameOver(true);\n    }\n  }, [currentQuestion, setCurrentQuestion]);\n\n  // Use the useEffect hook to run a callback function when the component is mounted\n  useEffect(function () {\n    // Set a timer to decrease the value of the timer state variable every second\n    var interval = setInterval(function () {\n      setTimer(timer - 1);\n    }, 1000);\n\n    // Check if the timer has reached 0 and move to the next question if it has\n    if (timer === 0) {\n      setTimer(TIME_LIMIT); // Reset the timer to the time limit\n      handleNextQuestion();\n    }\n\n    // Clear the interval when the component is unmounted\n    return function () {\n      return clearInterval(interval);\n    };\n  }, [timer, handleNextQuestion]);\n  var handleAnswerSelected = function handleAnswerSelected(event, answer) {\n    if (answer === currentQuestion.correctAnswer) {\n      setScore(score + 1);\n    }\n    handleNextQuestion();\n  };\n  var handlePlayAgain = function handlePlayAgain() {\n    setCurrentQuestion(questions[0]);\n    setScore(0);\n    setTimer(TIME_LIMIT); // Reset the timer to the time limit\n    setGameOver(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Sensitive Topic History Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, _this), gameOver ? /*#__PURE__*/_jsxDEV(GameOver, {\n      score: score,\n      handlePlayAgain: handlePlayAgain\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, _this) : /*#__PURE__*/_jsxDEV(GameInProgress, {\n      currentQuestion: currentQuestion,\n      handleAnswerSelected: handleAnswerSelected,\n      score: score,\n      timer: timer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, _this);\n};\n_s(SensitiveTopicGame, \"XyUC5q8hhBcqAIVa1CnKUX7kYWE=\");\n_c = SensitiveTopicGame;\nexport default SensitiveTopicGame;\nvar _c;\n$RefreshReg$(_c, \"SensitiveTopicGame\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","questions","GameOver","GameInProgress","jsxDEV","_jsxDEV","TIME_LIMIT","SensitiveTopicGame","_s","_useState","_useState2","_slicedToArray","currentQuestion","setCurrentQuestion","_useState3","_useState4","score","setScore","_useState5","_useState6","timer","setTimer","_useState7","_useState8","gameOver","setGameOver","handleNextQuestion","nextQuestionIndex","indexOf","length","interval","setInterval","clearInterval","handleAnswerSelected","event","answer","correctAnswer","handlePlayAgain","children","fileName","_jsxFileName","lineNumber","columnNumber","_this","_c","$RefreshReg$"],"sources":["/Users/richardlawson/Desktop/Projects/623 Studios/Chat-Quiz/src/SensitiveTopicGame.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport questions from \"./questions.json\";\nimport GameOver from \"./GameOver\";\nimport GameInProgress from \"./GameInProgress\";\nimport \"./styles.css\"; // Import the stylesheet\n\n// Define a constant for the time limit for the quiz game\nconst TIME_LIMIT = 30;\n\nconst SensitiveTopicGame = () => {\n  // Use the useState hook to define and update state variables\n  const [currentQuestion, setCurrentQuestion] = useState(questions[0]);\n  const [score, setScore] = useState(0);\n  const [timer, setTimer] = useState(TIME_LIMIT);\n  const [gameOver, setGameOver] = useState(false);\n\n  // Use the useCallback hook to create a memoized version of the handleNextQuestion function\n  const handleNextQuestion = useCallback(() => {\n    const nextQuestionIndex = questions.indexOf(currentQuestion) + 1;\n    if (nextQuestionIndex < questions.length) {\n      setTimer(TIME_LIMIT); // Reset the timer to the time limit\n      setCurrentQuestion(questions[nextQuestionIndex]);\n    } else {\n      setGameOver(true);\n    }\n  }, [currentQuestion, setCurrentQuestion]);\n\n  // Use the useEffect hook to run a callback function when the component is mounted\n  useEffect(() => {\n    // Set a timer to decrease the value of the timer state variable every second\n    const interval = setInterval(() => {\n      setTimer(timer - 1);\n    }, 1000);\n\n    // Check if the timer has reached 0 and move to the next question if it has\n    if (timer === 0) {\n      setTimer(TIME_LIMIT); // Reset the timer to the time limit\n      handleNextQuestion();\n    }\n\n    // Clear the interval when the component is unmounted\n    return () => clearInterval(interval);\n  }, [timer, handleNextQuestion]);\n\n  const handleAnswerSelected = (event, answer) => {\n    if (answer === currentQuestion.correctAnswer) {\n      setScore(score + 1);\n    }\n\n    handleNextQuestion();\n  };\n\n  const handlePlayAgain = () => {\n    setCurrentQuestion(questions[0]);\n    setScore(0);\n    setTimer(TIME_LIMIT); // Reset the timer to the time limit\n    setGameOver(false);\n  };\n\n\n  return (\n    <div>\n      <h1>Sensitive Topic History Quiz</h1>\n      {gameOver ? (\n        <GameOver score={score} handlePlayAgain={handlePlayAgain} />\n      ) : (\n        <GameInProgress\n          currentQuestion={currentQuestion}\n          handleAnswerSelected={handleAnswerSelected}\n          score={score}\n          timer={timer}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default SensitiveTopicGame;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}