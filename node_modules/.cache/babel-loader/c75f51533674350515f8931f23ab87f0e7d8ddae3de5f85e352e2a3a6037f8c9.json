{"ast":null,"code":"import _slicedToArray from \"/Users/richardlawson/Desktop/Projects/623 Studios/Chat-Quiz/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"/Users/richardlawson/Desktop/Projects/623 Studios/Chat-Quiz/src/GameInProgress.js\",\n  _this = this,\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./GameInProgress.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar GameInProgress = function GameInProgress(_ref) {\n  _s();\n  var currentQuestion = _ref.currentQuestion,\n    handleAnswerSelected = _ref.handleAnswerSelected,\n    score = _ref.score,\n    timer = _ref.timer;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    clicked = _useState2[0],\n    setClicked = _useState2[1];\n\n  // Add a new state variable to store the user's selected answer\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    selectedAnswer = _useState4[0],\n    setSelectedAnswer = _useState4[1];\n\n  // Create a new function that contains the logic for displaying the answers on the buttons\n  var handleAnswerClick = function handleAnswerClick(answer) {\n    setClicked(true);\n    setTimeout(function () {\n      handleAnswerSelected(event, answer);\n      setClicked(false);\n    }, 100);\n  };\n\n  // Add an event listener that listens for keypress events\n  useEffect(function () {\n    var handleKeyPress = function handleKeyPress(event) {\n      // Convert the key that was pressed to a number (if possible)\n      var key = parseInt(event.key, 10);\n\n      // If the key that was pressed is a number and is within the range of available answers,\n      // update the selectedAnswer state variable with the corresponding answer and call the\n      // handleAnswerClick function to display the answers on the buttons\n      if (!isNaN(key) && key > 0 && key <= currentQuestion.answers.length) {\n        var answer = currentQuestion.answers[key - 1];\n        setSelectedAnswer(answer);\n        handleAnswerClick(answer);\n      }\n    };\n\n    // Add the event listener\n    document.addEventListener(\"keypress\", handleKeyPress);\n\n    // Remove the event listener when the component is unmounted\n    return function () {\n      document.removeEventListener(\"keypress\", handleKeyPress);\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: currentQuestion.question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, _this), currentQuestion.answers.map(function (answer, index) {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        className: clicked && answer === currentQuestion.correctAnswer ? \"correct-answer\" : clicked && answer !== currentQuestion.correctAnswer ? \"incorrect-answer\" : \"\"\n        // Call the handleAnswerClick function when the button is clicked\n        ,\n        onClick: function onClick() {\n          return handleAnswerClick(answer);\n        },\n        value: answer,\n        children: answer\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, _this);\n    }), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Your current score is: \", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Time remaining: \", timer, \" seconds\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, _this);\n};\n_s(GameInProgress, \"HkWllA+KcWTsuOHrtZ8b0Pi59Jg=\");\n_c = GameInProgress;\nexport default GameInProgress;\nvar _c;\n$RefreshReg$(_c, \"GameInProgress\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","GameInProgress","_ref","_s","currentQuestion","handleAnswerSelected","score","timer","_useState","_useState2","_slicedToArray","clicked","setClicked","_useState3","_useState4","selectedAnswer","setSelectedAnswer","handleAnswerClick","answer","setTimeout","event","handleKeyPress","key","parseInt","isNaN","answers","length","document","addEventListener","removeEventListener","className","children","question","fileName","_jsxFileName","lineNumber","columnNumber","_this","map","index","correctAnswer","onClick","value","_c","$RefreshReg$"],"sources":["/Users/richardlawson/Desktop/Projects/623 Studios/Chat-Quiz/src/GameInProgress.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./GameInProgress.css\";\n\nconst GameInProgress = ({\n  currentQuestion,\n  handleAnswerSelected,\n  score,\n  timer\n}) => {\n  const [clicked, setClicked] = useState(false);\n\n  // Add a new state variable to store the user's selected answer\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n\n  // Create a new function that contains the logic for displaying the answers on the buttons\n  const handleAnswerClick = (answer) => {\n    setClicked(true);\n    setTimeout(() => {\n      handleAnswerSelected(event, answer);\n      setClicked(false);\n    }, 100);\n  };\n\n  // Add an event listener that listens for keypress events\n  useEffect(() => {\n    const handleKeyPress = (event) => {\n      // Convert the key that was pressed to a number (if possible)\n      const key = parseInt(event.key, 10);\n\n      // If the key that was pressed is a number and is within the range of available answers,\n      // update the selectedAnswer state variable with the corresponding answer and call the\n      // handleAnswerClick function to display the answers on the buttons\n      if (!isNaN(key) && key > 0 && key <= currentQuestion.answers.length) {\n        const answer = currentQuestion.answers[key - 1];\n        setSelectedAnswer(answer);\n        handleAnswerClick(answer);\n      }\n    };\n\n    // Add the event listener\n    document.addEventListener(\"keypress\", handleKeyPress);\n\n    // Remove the event listener when the component is unmounted\n    return () => {\n      document.removeEventListener(\"keypress\", handleKeyPress);\n    };\n  });\n\n  return (\n    <div className=\"game-container\">\n      <h2>{currentQuestion.question}</h2>\n      {currentQuestion.answers.map((answer, index) => (\n        <button\n          key={index}\n          className={\n            clicked && answer === currentQuestion.correctAnswer\n              ? \"correct-answer\"\n              : clicked && answer !== currentQuestion.correctAnswer\n              ? \"incorrect-answer\"\n              : \"\"\n          }\n          // Call the handleAnswerClick function when the button is clicked\n          onClick={() => handleAnswerClick(answer)}\n          value={answer}\n        >\n          {answer}\n        </button>\n      ))}\n      <p>Your current score is: {score}</p>\n      <p>Time remaining: {timer} seconds</p>\n    </div>\n  );\n};\n\nexport default GameInProgress;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}